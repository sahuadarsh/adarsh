{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","hef","title","type","id","href","about","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","class","value","backgroundColor","onChange","event","target","placeholder","rows","console","log","newtext","toUpperCase","showAlert","toLowerCase","slice","split","length","defaultProps","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ff0c3de.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  \r\n    return (\r\n         < >\r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n              <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" hef=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n                      <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n                    </li> \r\n                  </ul>\r\n                  <div className={`form-check form-switch text-${props.mode === 'light'?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n         </>\r\n        )\r\n        }\r\n\r\n        Navbar.propTypes={title:PropTypes.string.isRequired\r\n          ,about:PropTypes.string.isRequired}\r\n\r\n        Navbar.defaultProps={title:\"Textutils\"\r\n        }","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpper = () =>{\r\n        console.log(\"clicked\");\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Changed to upper Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleLower = () =>{\r\n        console.log(\"clicked\");\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Changed to Lower Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleCapSent = () =>{\r\n        console.log(\"Capitalized Sentence clicked\");\r\n        let newtext = text[0].toUpperCase()+text.slice(1);\r\n        setText(newtext);\r\n        props.showAlert(\"Changed to Capitalise Sentence\",\"Success\");\r\n\r\n    }\r\n\r\n\r\n\r\n \r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div className=\"container\"style={{color:props.mode === \"light\"?\"black\":\"white\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div class=\"mb-3\">\r\n                <textarea class=\"form-control border-2 border-dark\" value={text} style={{backgroundColor:props.mode === \"light\"?\"white\":\"black\"}} onChange={handleOnChange} placeholder=\"Enter Text Here\" id=\"mybox\" rows=\"6\" ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleUpper}>Convert To Upper Case</button>\r\n            <button className=\"btn btn-success mx-1 my-2\" onClick={handleLower}>Convert To Lower Case</button>\r\n            <button className=\"btn btn-warning mx-1 my-2\" onClick={handleCapSent}>Convert To Capitalize Sentence</button>\r\n        \r\n        <div className={`container ${props.mode}`}>\r\n            <h3>summary of text</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{text.split(\" \").length*0.008} minutes to take to read</p>\r\n        </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n      props.alert &&  <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}:</strong>{props.alert.msg}\r\n  \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";*/}\n\n\nfunction App() {\n    const [mode, setMode] = useState(\"light\");\n    const [alert, setAlert] = useState(null)\n    const showAlert = (message,type) => {\n        setAlert({\n            msg: message,\n            type:type\n        })\n        setTimeout(()=>{\n            setAlert(null);\n        },1500);\n    }\n    const toggleMode = ()=>{\n        if (mode==='light')\n        {\n            setMode('dark');\n            document.body.style.backgroundColor='black';\n            showAlert(\"Enable Dark Mode\",\"Success\");\n        }\n        else\n        {\n            setMode('light');\n            document.body.style.backgroundColor='white';\n            showAlert(\"Disable Dark Mode\",\"Success\");\n\n        }\n    }\n    return ( \n    <>\n    {/* <Router> */}\n    <Navbar about=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    \n    {/*<Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n    <Route path=\"/\">*/}\n          <Textform showAlert={showAlert} heading=\"Enter The Text To Convert\" mode={mode}/>\n          {/*</Route>*/}\n        {/*</Switch</Router>*/}\n        \n    </div>\n    {/* </Router> */}\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}